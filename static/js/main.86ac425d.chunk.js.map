{"version":3,"sources":["JSS_StyledComponent/components/Dropdown.js","JSS_StyledComponent/components/Container.js","JSS_StyledComponent/components/Heading.js","JSS_StyledComponent/components/TextField.js","JSS_StyledComponent/components/Button.js","JSS_StyledComponent/components/Table.js","JSS_StyledComponent/redux/constant/index.js","JSS_StyledComponent/redux/action/index.js","JSS_StyledComponent/Themes/ToDoListDarkTheme.js","JSS_StyledComponent/Themes/ThemeManager.js","JSS_StyledComponent/Themes/ToDoListLightTheme.js","JSS_StyledComponent/Themes/ToDoListPrimaryTheme.js","JSS_StyledComponent/components/Loader.js","JSS_StyledComponent/ToDoList/ToDoList.js","JSS_StyledComponent/ToDoList/ToDoList_Hook.js","App.js","reportWebVitals.js","JSS_StyledComponent/redux/reducer/TodoListReducer.js","JSS_StyledComponent/redux/reducer/index.js","index.js"],"names":["Dropdown","styled","select","props","theme","bgColor","color","hoverTextColor","hoverBgColor","div","Container","h1","h2","Heading3","h3","h4","h5","Input","input","Label","span","TextField","label","Button","button","borderButton","Table","table","Thead","thead","Tr","tbody","tr","Th","td","th","backgroundColor","CHANGE_THEME","EDIT_TASK","TASK_REQUEST","TASK_SUCCESS","TASK_FAILED","actChangeTheme","codeTheme","type","payload","actGetTaskApi","uri","method","data","dispatch","actTaskRequest","Axios","url","then","result","actEditTask","actTaskSuccess","catch","err","actTaskFailed","task","ToDoListDarkTheme","borderRadiusButton","borderColor","arrTheme","id","name","spin","keyframes","Loading","Loader","ToDoList","renderTaskTodo","taskList","length","filter","item","status","map","style","verticalAlign","textTask","className","onClick","setState","disabled","handleEditTask","handleChangeStatusTask","handleDeleteTask","renderTaskCompleted","textDecoration","class","renderTheme","value","state","this","handleGetTaskApi","prevProps","prevState","editTask","loading","themeToDoList","onChange","e","target","handleChangeTheme","handleAddTask","handleUpdateTask","Component","connect","TodoListReducer","newTask","useState","useEffect","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","taskName","action","find","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86ac425d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Dropdown = styled.select`\r\n  width: 100%;\r\n  height: 50px;\r\n  font-size: 100%;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  border-radius: 0;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: 2px solid ${(props) => props.theme.color};\r\n  color: ${(props) => props.theme.color};\r\n  padding: 10px;\r\n  padding-right: 38px;\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  /* Adding transition effect */\r\n  transition: color 0.3s ease, background-color 0.3s ease,\r\n    border-bottom-color 0.3s ease;\r\n  &:hover {\r\n    color: ${(props) => props.theme.hoverTextColor};\r\n    background-color: ${(props) => props.theme.hoverBgColor};\r\n    border-bottom-color: #dcdcdc;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContainerFluid = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.color};\r\n  border: 5px solid ${(props) => props.theme.color};\r\n  padding: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.color};\r\n  border: 5px solid ${(props) => props.theme.color};\r\n  padding: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Heading1 = styled.h1`\r\n  font-size: 4rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading2 = styled.h2`\r\n  font-size: 3rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading3 = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading4 = styled.h4`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading5 = styled.h5`\r\n  font-size: 0.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${(props) => props.theme.color};\r\n  min-height: 35px;\r\n  height: 35px;\r\n  font-size: 17px;\r\n  width: auto;\r\n  display: initial;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  color: ${(props) => props.theme.color};\r\n  width: auto;\r\n`;\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  return (\r\n    <span>\r\n      <Label>\r\n        {label}\r\n        <br />\r\n      </Label>\r\n      <Input {...props} />\r\n    </span>\r\n  );\r\n};\r\n","import styled from 'styled-components'\r\n//----------------button-------------------\r\nexport const Button = styled.button`\r\n    apperance:none;\r\n    background-color: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.color};\r\n    border: ${props => props.theme.borderButton};\r\n    padding: .25em .5em;\r\n    transition: all .5s;\r\n    font-size:17px;\r\n    &:hover {\r\n        color: ${props => props.theme.hoverTextColor};\r\n        background-color:${props => props.theme.hoverBgColor};\r\n        border: ${props => props.theme.borderButton};\r\n    };\r\n    &:disabled{\r\n        cursor: no-drop;\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Table = styled.table`\r\n  color: ${(props) => props.theme.color};\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin-bottom: 1rem;\r\n  background-color: transparent;\r\n\r\n  border-spacing: 2px;\r\n  border-color: ${(props) => props.theme.color};\r\n`;\r\nexport const Thead = styled.thead`\r\n  display: table-header-group;\r\n  vertical-align: middle;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const Tbody = styled.tbody`\r\n  display: table-row-group;\r\n  vertical-align: middle;\r\n  border-color: inherit;\r\n`;\r\nexport const Tr = styled.tr`\r\n  display: table-row;\r\n  vertical-align: inherit;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\nexport const Td = styled.td`\r\n  padding: 0.75rem;\r\n  vertical-align: top;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const Th = styled.th`\r\n    background-color: ${(props) => props.theme.backgroundColor}\r\n    color: ${(props) => props.theme.color}\r\n    vertical-align: bottom;\r\n    text-align: inherit;\r\n    border-top: 1px solid ${(props) => props.theme.color};\r\n    padding: .75rem;\r\n    vertical-align: top;\r\n    border-bottom: 1px solid ${(props) => props.theme.color};\r\n`;\r\n","export const CHANGE_THEME = \"TodolistReducer/CHANGE_THEME\";\r\nexport const EDIT_TASK = \"TodolistReducer/EDIT_TASK\";\r\nexport const UPDATE_TASK = \"TodolistReducer/UPDATE_TASK\";\r\nexport const TASK_REQUEST = \"TodolistReducer/TASK_REQUEST\";\r\nexport const TASK_SUCCESS = \"TodolistReducer/TASK_SUCCESS\";\r\nexport const TASK_FAILED = \"TodolistReducer/TASK_FAILED\";\r\n","import Axios from \"axios\";\r\nimport {\r\n  CHANGE_THEME,\r\n  EDIT_TASK,\r\n  TASK_FAILED,\r\n  TASK_REQUEST,\r\n  TASK_SUCCESS,\r\n} from \"../constant\";\r\n\r\nexport const actChangeTheme = (codeTheme) => {\r\n  return {\r\n    type: CHANGE_THEME,\r\n    payload: codeTheme,\r\n  };\r\n};\r\n\r\nexport const actGetTaskApi = (uri, method = \"GET\", data) => {\r\n  return (dispatch) => {\r\n    dispatch(actTaskRequest());\r\n    Axios({\r\n      url: `https://5f5c7a345e3a4d001624941b.mockapi.io/TaskTodo/${uri}`,\r\n      method,\r\n      data,\r\n    })\r\n      .then((result) => {\r\n        if (method !== \"GET\") {\r\n          dispatch(actGetTaskApi(\"\", \"GET\", \"\"));\r\n        } else if (method === \"GET\" && uri !== \"\") {\r\n          dispatch(actEditTask(result.data));\r\n        } else {\r\n          dispatch(actTaskSuccess(result.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(actTaskFailed(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const actTaskRequest = () => {\r\n  return {\r\n    type: TASK_REQUEST,\r\n  };\r\n};\r\n\r\nexport const actTaskSuccess = (data) => {\r\n  return {\r\n    type: TASK_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\nexport const actTaskFailed = (err) => {\r\n  return {\r\n    type: TASK_FAILED,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const actEditTask = (task) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    payload: task,\r\n  };\r\n};\r\n\r\n\r\n","export const ToDoListDarkTheme = {\r\n    bgColor: '#343a40',\r\n    color:'#fff',\r\n    borderButton: '1px solid #fff',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#343a40',\r\n    hoverBgColor:'#fff',\r\n    borderColor:'#343a40'\r\n}","import { ToDoListDarkTheme } from \"./ToDoListDarkTheme\";\r\nimport { ToDoListLightTheme } from \"./ToDoListLightTheme\";\r\nimport { ToDoListPrimaryTheme } from \"./ToDoListPrimaryTheme\";\r\n\r\nexport const arrTheme = [\r\n  { id: 1, name: \"Dark Theme\", theme: ToDoListDarkTheme },\r\n  { id: 2, name: \"Light Theme\", theme: ToDoListLightTheme },\r\n  { id: 3, name: \"Primary Theme\", theme: ToDoListPrimaryTheme },\r\n];\r\n","export const ToDoListLightTheme = {\r\n    bgColor: '#fff',\r\n    color:'#7952b3',\r\n    borderButton: '1px solid #7952b3',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#fff',\r\n    hoverBgColor:'#7952b3',\r\n    borderColor:'#7952b3'\r\n\r\n}","export const ToDoListPrimaryTheme = {\r\n    bgColor: '#fff',\r\n    color:'#343a40',\r\n    borderButton: '1px solid #343a40',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#fff',\r\n    hoverBgColor:'#343a40',\r\n    borderColor:'#343a40'\r\n}","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 30%;\r\n  transform: translate(-30%, -50%);\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid blue;\r\n  border-right: 16px solid green;\r\n  border-bottom: 16px solid red;\r\n  width: 120px;\r\n  height: 120px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: ${spin} 2s linear infinite;\r\n`;\r\n\r\nexport default function Loader() {\r\n  return <Loading></Loading>;\r\n}\r\n","import { Dropdown } from \"./../components/Dropdown\";\r\nimport React, { Component } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Container } from \"../components/Container\";\r\nimport { Heading3 } from \"./../components/Heading\";\r\nimport { TextField } from \"../components/TextField\";\r\nimport { Button } from \"./../components/Button\";\r\nimport { Table, Tr, Th, Thead } from \"../components/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { actChangeTheme, actGetTaskApi } from \"../redux/action\";\r\nimport { arrTheme } from \"../Themes/ThemeManager\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: { id: \"\", textTask: \"\", status: \"todo\" },\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.handleGetTaskApi();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //so sánh nếu như props trước đó taskEdit trước mà khác taskEdit hiện tại thì mình mới setState\r\n    if (prevProps.editTask.id !== this.props.editTask.id) {\r\n      let { textTask, id, status } = this.props.editTask;\r\n      this.setState({\r\n        data: { id, textTask, status },\r\n      });\r\n    }\r\n  }\r\n\r\n  renderTaskTodo = () => {\r\n    let { taskList } = this.props;\r\n    if (taskList && taskList.length > 0) {\r\n      return taskList\r\n        .filter((item) => {\r\n          return item.status === \"todo\";\r\n        })\r\n        .map((task) => {\r\n          return (\r\n            <Tr key={task.id}>\r\n              <Th style={{ verticalAlign: \"middle\" }}>{task.textTask}</Th>\r\n              <Th className=\"text-right\">\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    this.setState(\r\n                      {\r\n                        disabled: false,\r\n                      },\r\n                      () => {\r\n                        this.props.handleEditTask(task);\r\n                      }\r\n                    );\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-edit\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    this.props.handleChangeStatusTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-check\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    this.props.handleDeleteTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n              </Th>\r\n            </Tr>\r\n          );\r\n        });\r\n    }\r\n  };\r\n  renderTaskCompleted = () => {\r\n    let { taskList } = this.props;\r\n    if (taskList && taskList.length > 0) {\r\n      return taskList\r\n        .filter((item) => {\r\n          return item.status === \"completed\";\r\n        })\r\n        .map((task) => {\r\n          return (\r\n            <Tr key={task.id}>\r\n              <Th\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                  textDecoration: \"line-through\",\r\n                }}\r\n              >\r\n                {task.textTask}\r\n              </Th>\r\n              <Th className=\"text-right\">\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    this.props.handleChangeStatusTask(task);\r\n                  }}\r\n                >\r\n                  <i class=\"fa fa-undo\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    this.props.handleDeleteTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n              </Th>\r\n            </Tr>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  renderTheme = () => {\r\n    return arrTheme.map((theme) => {\r\n      return (\r\n        <option value={theme.id} key={theme.id}>\r\n          {theme.name}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { loading } = this.props;\r\n    if (loading) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <ThemeProvider theme={this.props.themeToDoList}>\r\n        <Container className=\"w-50\">\r\n          <Dropdown\r\n            onChange={(e) => {\r\n              let { value } = e.target;\r\n              this.props.handleChangeTheme(value);\r\n            }}\r\n          >\r\n            {this.renderTheme()}\r\n          </Dropdown>\r\n          <Heading3>To do list</Heading3>\r\n          <TextField\r\n            label=\"Task name\"\r\n            className=\"w-50\"\r\n            name=\"textTask\"\r\n            value={this.state.data.textTask}\r\n            onChange={(e) => {\r\n              let { name, value } = e.target;\r\n              this.setState({\r\n                data: { ...this.state.data, [name]: value },\r\n              });\r\n            }}\r\n          />\r\n\r\n          {this.state.disabled ? (\r\n            <Button\r\n              className=\"ml-2\"\r\n              onClick={() => {\r\n                this.props.handleAddTask(this.state.data);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-plus mr-1\"></i>\r\n              Add Task\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              disabled={this.state.disabled}\r\n              className=\"ml-2\"\r\n              onClick={() => {\r\n                let { data } = this.state;\r\n                this.setState(\r\n                  {\r\n                    data: { id: \"\", textTask: \"\", status: false },\r\n                    disabled: true,\r\n                  },\r\n                  () => {\r\n                    this.props.handleUpdateTask(data);\r\n                  }\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fa fa-upload mr-1\"></i>\r\n              Update Task\r\n            </Button>\r\n          )}\r\n\r\n          <hr />\r\n          <Heading3>Task To Do</Heading3>\r\n          <Table>\r\n            <Thead>{this.renderTaskTodo()}</Thead>\r\n          </Table>\r\n\r\n          <Heading3>Task Completed</Heading3>\r\n          <Table>\r\n            <Thead>{this.renderTaskCompleted()}</Thead>\r\n          </Table>\r\n        </Container>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    themeToDoList: state.TodoListReducer.themeToDoList,\r\n    loading: state.TodoListReducer.loading,\r\n    err: state.TodoListReducer.err,\r\n    taskList: state.TodoListReducer.taskList,\r\n    editTask: state.TodoListReducer.editTask,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleGetTaskApi: () => {\r\n      dispatch(actGetTaskApi(\"\", \"GET\", \"\"));\r\n    },\r\n\r\n    handleAddTask: (newTask) => {\r\n      dispatch(actGetTaskApi(\"\", \"POST\", newTask));\r\n    },\r\n\r\n    handleChangeTheme: (codeTheme) => {\r\n      dispatch(actChangeTheme(codeTheme));\r\n    },\r\n\r\n    handleChangeStatusTask: (task) => {\r\n      if (task.status === \"completed\") {\r\n        task.status = \"todo\";\r\n      } else {\r\n        task.status = \"completed\";\r\n      }\r\n      dispatch(actGetTaskApi(task.id, \"PUT\", task));\r\n    },\r\n\r\n    handleDeleteTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"DELETE\", \"\"));\r\n    },\r\n\r\n    handleEditTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"GET\", \"\"));\r\n    },\r\n\r\n    handleUpdateTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"PUT\", task));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Dropdown } from \"./../components/Dropdown\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Container } from \"../components/Container\";\r\nimport { Heading3 } from \"./../components/Heading\";\r\nimport { TextField } from \"../components/TextField\";\r\nimport { Button } from \"./../components/Button\";\r\nimport { Table, Tr, Th, Thead } from \"../components/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { actChangeTheme, actGetTaskApi } from \"../redux/action\";\r\nimport { arrTheme } from \"../Themes/ThemeManager\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction ToDoList_Hook(props) {\r\n  const [state, setState] = useState({\r\n    data: { id: \"\", textTask: \"\", status: \"todo\" },\r\n    disabled: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"did mount\");\r\n    props.handleGetTaskApi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"did update\");\r\n    if (props.editTask.id !== \"\") {\r\n      let { textTask, id, status } = props.editTask;\r\n      setState({\r\n        ...state,\r\n        data: { id, textTask, status },\r\n      });\r\n    }\r\n  }, [props.editTask.id]);\r\n\r\n  const renderTaskTodo = () => {\r\n    let { taskList } = props;\r\n    if (taskList && taskList.length > 0) {\r\n      return taskList\r\n        .filter((item) => {\r\n          return item.status === \"todo\";\r\n        })\r\n        .map((task) => {\r\n          return (\r\n            <Tr key={task.id}>\r\n              <Th style={{ verticalAlign: \"middle\" }}>{task.textTask}</Th>\r\n              <Th className=\"text-right\">\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    props.handleEditTask(task);\r\n                    setState({\r\n                      ...state,\r\n                      disabled: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-edit\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    props.handleChangeStatusTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-check\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    props.handleDeleteTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n              </Th>\r\n            </Tr>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderTaskCompleted = () => {\r\n    let { taskList } = props;\r\n    if (taskList && taskList.length > 0) {\r\n      return taskList\r\n        .filter((item) => {\r\n          return item.status === \"completed\";\r\n        })\r\n        .map((task) => {\r\n          return (\r\n            <Tr key={task.id}>\r\n              <Th\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                  textDecoration: \"line-through\",\r\n                }}\r\n              >\r\n                {task.textTask}\r\n              </Th>\r\n              <Th className=\"text-right\">\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    props.handleChangeStatusTask(task);\r\n                  }}\r\n                >\r\n                  <i class=\"fa fa-undo\"></i>\r\n                </Button>\r\n                <Button\r\n                  className=\"ml-1\"\r\n                  onClick={() => {\r\n                    props.handleDeleteTask(task);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n              </Th>\r\n            </Tr>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderTheme = () => {\r\n    return arrTheme.map((theme) => {\r\n      return (\r\n        <option value={theme.id} key={theme.id}>\r\n          {theme.name}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (props.loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={props.themeToDoList}>\r\n      <Container className=\"w-50\">\r\n        <Dropdown\r\n          onChange={(e) => {\r\n            let { value } = e.target;\r\n            props.handleChangeTheme(value);\r\n          }}\r\n        >\r\n          {renderTheme()}\r\n        </Dropdown>\r\n        <Heading3>To do list</Heading3>\r\n        <TextField\r\n          label=\"Task name\"\r\n          className=\"w-50\"\r\n          name=\"textTask\"\r\n          value={state.data.textTask}\r\n          onChange={(e) => {\r\n            let { name, value } = e.target;\r\n            setState({\r\n              ...state,\r\n              data: { ...state.data, [name]: value },\r\n            });\r\n          }}\r\n        />\r\n\r\n        {state.disabled ? (\r\n          <Button\r\n            className=\"ml-2\"\r\n            onClick={() => {\r\n              props.handleAddTask(state.data);\r\n            }}\r\n          >\r\n            <i className=\"fa fa-plus mr-1\"></i>\r\n            Add Task\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={state.disabled}\r\n            className=\"ml-2\"\r\n            onClick={() => {\r\n              let { data } = state;\r\n              props.handleUpdateTask(data);\r\n              setState({\r\n                data: { id: \"\", textTask: \"\", status: \"todo\" },\r\n                disabled: true,\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fa fa-upload mr-1\"></i>\r\n            Update Task\r\n          </Button>\r\n        )}\r\n\r\n        <hr />\r\n        <Heading3>Task To Do</Heading3>\r\n        <Table>\r\n          <Thead>{renderTaskTodo()}</Thead>\r\n        </Table>\r\n\r\n        <Heading3>Task Completed</Heading3>\r\n        <Table>\r\n          <Thead>{renderTaskCompleted()}</Thead>\r\n        </Table>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    themeToDoList: state.TodoListReducer.themeToDoList,\r\n    loading: state.TodoListReducer.loading,\r\n    err: state.TodoListReducer.err,\r\n    taskList: state.TodoListReducer.taskList,\r\n    editTask: state.TodoListReducer.editTask,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleGetTaskApi: () => {\r\n      dispatch(actGetTaskApi(\"\", \"GET\", \"\"));\r\n    },\r\n\r\n    handleAddTask: (newTask) => {\r\n      dispatch(actGetTaskApi(\"\", \"POST\", newTask));\r\n    },\r\n\r\n    handleChangeTheme: (codeTheme) => {\r\n      dispatch(actChangeTheme(codeTheme));\r\n    },\r\n\r\n    handleChangeStatusTask: (task) => {\r\n      if (task.status === \"completed\") {\r\n        task.status = \"todo\";\r\n      } else {\r\n        task.status = \"completed\";\r\n      }\r\n      dispatch(actGetTaskApi(task.id, \"PUT\", task));\r\n    },\r\n\r\n    handleDeleteTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"DELETE\", \"\"));\r\n    },\r\n\r\n    handleEditTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"GET\", \"\"));\r\n    },\r\n\r\n    handleUpdateTask: (task) => {\r\n      dispatch(actGetTaskApi(task.id, \"PUT\", task));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList_Hook);\r\n","import \"./App.css\";\r\nimport ToDoList from \"./JSS_StyledComponent/ToDoList/ToDoList\";\r\nimport ToDoList_Hook from \"./JSS_StyledComponent/ToDoList/ToDoList_Hook\";\r\n// import DemoThemes  from './JSS_StyledComponent/Themes/DemoThemes';\r\n// import DemoJSS from './JSS_StyledComponent/DemoJSS/DemoJSS';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      {/* <DemoJSS /> */}\r\n      {/* <DemoThemes /> */}\r\n      {/* <ToDoList /> */}\r\n      <ToDoList_Hook />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { arrTheme } from \"../../Themes/ThemeManager\";\r\nimport { ToDoListDarkTheme } from \"../../Themes/ToDoListDarkTheme\";\r\nimport {\r\n  CHANGE_THEME,\r\n  EDIT_TASK,\r\n  TASK_FAILED,\r\n  TASK_REQUEST,\r\n  TASK_SUCCESS,\r\n} from \"../constant\";\r\n\r\nconst initialState = {\r\n  themeToDoList: ToDoListDarkTheme,\r\n  loading: false,\r\n  taskList: null,\r\n  err: null,\r\n  editTask: { id: -1, taskName: \"\", status: \"\" },\r\n};\r\n\r\nconst TodoListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TASK_REQUEST: {\r\n      state.loading = true;\r\n      return { ...state };\r\n    }\r\n    case TASK_SUCCESS: {\r\n      state.loading = false;\r\n      state.taskList = action.payload;\r\n      state.err = null;\r\n      return { ...state };\r\n    }\r\n    case TASK_FAILED: {\r\n      state.loading = false;\r\n      state.taskList = null;\r\n      state.err = action.payload;\r\n      return { ...state };\r\n    }\r\n    case CHANGE_THEME: {\r\n      let theme = arrTheme.find((theme) => {\r\n        return theme.id == action.payload;\r\n      });\r\n      if (theme) {\r\n        state.themeToDoList = { ...theme.theme };\r\n      }\r\n      return { ...state };\r\n    }\r\n\r\n    case EDIT_TASK: {\r\n      state.loading = false;\r\n      state.editTask = action.payload;\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default TodoListReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport TodoListReducer from \"./TodoListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  TodoListReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../node_modules/jquery/dist/jquery.min\";\r\nimport \"./../node_modules/popper.js/dist/umd/popper.min\";\r\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.min\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./JSS_StyledComponent/redux/reducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}